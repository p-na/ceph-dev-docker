#!/bin/bash

# args: $0 [sleep|noop] [vstart-args...]
set -x

sleep="false"
if [ "$1" = "sleep" ] ; then
    sleep="true"
    shift
elif [ "$1" = "noop" ] ; then
    sleep infinity
    exit 0
fi

cd /ceph/build

# Backup mgr.x.log
tar vcfJ mgr.log.$(date +%F_%H:%M:%S).xz out/mgr.?.log
rm -rf out/*

../src/vstart.sh -n -d $@
./bin/ceph mgr module enable prometheus

sleep 5
./bin/ceph mgr services

echo "Additional services (if started):"
echo "Grafana on http://localhost:3000"
echo "Prometheus on http://localhost:9090"

# Create RBD pools

ceph osd pool create rbd 1 replicated # Create default pool
ceph osd pool application enable rbd rbd # Set application to `rbd` for pool

ceph osd pool create rbd_pool 1 replicated # Create pool
ceph osd pool application enable rbd_pool rbd # Set application to `rbd` for pool

# Prepare RGW credentials

if [ "$RGW" -gt "0" ] ; then
	./bin/radosgw-admin user create --uid=dev --display-name=Developer --system
	./bin/ceph dashboard set-rgw-api-user-id dev
	./bin/ceph dashboard set-rgw-api-access-key `./bin/radosgw-admin user info --uid=dev | jq .keys[0].access_key | sed -e 's/^"//' -e 's/"$//'`
	./bin/ceph dashboard set-rgw-api-secret-key `./bin/radosgw-admin user info --uid=dev | jq .keys[0].secret_key | sed -e 's/^"//' -e 's/"$//'`
fi

tmux new -d -s ceph -n 'Backend Reload' 'auto-reloadm' # Create new session, detached
tmux new-window -t ceph -n 'Frontend Rebuild' 'fe-run' # Add new window to session
# tmux attach -t ceph # Attach to session
if [[ "$sleep" = "true" ]]; then
    sleep infinity
fi
