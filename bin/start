#!/bin/bash

# args: $0 [sleep|noop] [vstart-args...]
set -ex

sleep="false"
if [ "$1" = "sleep" ] ; then
    sleep="true"
    shift
elif [ "$1" = "noop" ] ; then
    sleep infinity
    exit 0
fi

cd /ceph/build

# if [ -d "out/" ]
# then
#     # Backup mgr.x.log
#     tar vcfJ mgr.log.$(date +%F_%H:%M:%S).xz out/mgr.?.log
#     rm -rf out/*
# fi

../src/vstart.sh -n -d $@
./bin/ceph mgr module enable prometheus

echo "sleeping 5 seconds"
sleep 5
./bin/ceph mgr services

echo "Additional services (if started):"
echo "Grafana on http://localhost:3000"
echo "Prometheus on http://localhost:9090"

if [[ ! -z "$RBD"  || ! -z "$RBD_POOL" ]] ; then
    # Create RBD pools
    ceph osd pool create rbd 8 replicated # Create default pool
    ceph osd pool application enable rbd rbd # Set application to `rbd` for pool
fi

if [ -z "$NONFS" ] ; then
    ceph osd pool create nfs 8 replicated # Create pool
    ceph dashboard set-ganesha-clusters-rados-pool-namespace ceph:nfs
fi

if ping -c 1 alertmanager; then
    ceph dashboard set-alertmanager-api-host http://alertmanager:9093
fi

if ping -c 1 prometheus; then
    ceph dashboard set-prometheus-api-host http://prometheus:9090
fi

# Prepare RGW credentials

if [[ "$RGW" -gt "0" || ! -z "$RGW" ]] ; then
	./bin/radosgw-admin user create --uid=dev --display-name=Developer --system
	./bin/ceph dashboard set-rgw-api-user-id dev
	./bin/ceph dashboard set-rgw-api-access-key `./bin/radosgw-admin user info --uid=dev | jq .keys[0].access_key | sed -e 's/^"//' -e 's/"$//'`
	./bin/ceph dashboard set-rgw-api-secret-key `./bin/radosgw-admin user info --uid=dev | jq .keys[0].secret_key | sed -e 's/^"//' -e 's/"$//'`
fi

tmux new -d -s ceph -n 'Backend Reload' 'auto-reloadm; zsh -i' # Create new session, detached
tmux new-window -t ceph -n 'Frontend Rebuild' 'fe-run; zsh -i' # Add new window to session
# tmux attach -t ceph # Attach to session

# Enable debug messages in responses from the back-end
./bin/ceph dashboard debug enable

# Enable debug log level and write to dashboards own log file instead of
# writing to the mgr.?.log.
./bin/ceph config set mgr mgr/dashboard/log_level debug
./bin/ceph config set mgr mgr/dashboard/log_to_file true

# Temporary fix for `stray hosts/services` issue of `orchestrator_cli`
ceph config set mgr mgr/cephadm/warn_on_stray_hosts false && \
    ceph config set mgr mgr/cephadm/warn_on_stray_services false && \
    ceph mgr module enable cephadm

if [[ "$sleep" = "true" ]]; then
    sleep infinity
fi
